AC_INIT([get2gnow], [0.0.eC.aDD], [http://uberChicGeekChick.Com/?projects=get2gnow], [get2gnow])
AC_PREREQ(2.59)
AC_COPYRIGHT([Copyright (C) 2009 Kaity G. B.])

AC_CONFIG_SRCDIR([src/main.c])
AC_CONFIG_HEADERS(config.h)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE([1.9 no-dist-gzip dist-bzip2])

AC_DEFAULT_PREFIX(/usr)

AM_MAINTAINER_MODE

AM_PROG_LIBTOOL

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_PATH_PROG(GCONFTOOL, gconftool-2)
AM_GCONF_SOURCE_2

GNOME_DOC_INIT
IT_PROG_INTLTOOL([0.35.0])

GNOME_COMPILE_WARNINGS([maximum])
GNOME_CXX_WARNINGS
GNOME_DEBUG_CHECK
GNOME_MAINTAINER_MODE_DEFINES

dnl -----------------------------------------------------------
dnl
dnl Library Dependencies, uses pkg-config to detect correct version, etc
dnl
dnl -----------------------------------------------------------

LIBSOUP_REQUIRED=2.24.3
LIBXML_REQUIRED=2.6.16
GLIB_REQUIRED=2.20.0
GTK_REQUIRED=2.12.12
GCONF_REQUIRED=1.2.0
LIBGIO_REQUIRED=2.15.5
LIBCANBERRA_REQUIRED=0.4
ENCHANT_REQUIRED=1.2.0
ISO_CODES_REQUIRED=0.35

dnl -----------------------------------------------------------
dnl GNOME Keyring
dnl -----------------------------------------------------------
AC_ARG_ENABLE(gnome_keyring,
	      AS_HELP_STRING([--enable-gnome-keyring=@<:@no/yes/auto@:>@],
		             [compile with Gnome Keyring support]), ,
              enable_gnome_keyring=auto)

if test "x$enable_gnome_keyring" != "xno"; then
	gnome_keyring_pkgconfig_tmp="gnome-keyring-1"
	PKG_CHECK_MODULES(GNOME_KEYRING, $gnome_keyring_pkgconfig_tmp, have_gnome_keyring=yes, have_gnome_keyring=no)
	if test x$have_gnome_keyring = xyes; then
		AC_DEFINE(HAVE_GNOME_KEYRING, 1, [gnome keyring support])
		gnome_keyring_pkgconfig=$gnome_keyring_pkgconfig_tmp
	fi
else
	have_gnome_keyring=no
	gnome_keyring_pkgconfig=
fi

if test "x$enable_gnome_keyring" = "xyes"; then
	if test "x$have_gnome_keyring" != "xyes"; then
		AC_MSG_ERROR([Couldn't find GNOME Keyring.])
	fi
fi

AM_CONDITIONAL(HAVE_GNOME_KEYRING, test x$have_gnome_keyring = xyes)

dnl -----------------------------------------------------------
dnl Pkg-Config dependency checks
dnl -----------------------------------------------------------
PKG_CHECK_MODULES(get2gnow,
[
	libsexy
	openssl
	libsoup-2.4 >= $LIBSOUP_REQUIRED
	libnotify
	gnome-vfs-2.0
	gtk+-2.0 >= $GTK_REQUIRED
	glib-2.0 >= $GLIB_REQUIRED
	gio-2.0 >= $LIBGIO_REQUIRED
	libcanberra-gtk >= $LIBCANBERRA_REQUIRED
	libxml-2.0 >= $LIBXML_REQUIRED
	gobject-2.0
	gthread-2.0
	gconf-2.0 >= $GCONF_REQUIRED
	$gnome_keyring_pkgconfig
	$iso_codes_pkgconfig
])
AC_SUBST(get2gnow_CFLAGS)
AC_SUBST(get2gnow_LIBS)

dnl -----------------------------------------------------------
dnl Enchant
dnl -----------------------------------------------------------
AC_ARG_ENABLE(spell,
              AS_HELP_STRING([--enable-spell=@<:@no/yes/auto@:>@],
                             [compile with spell support]), ,
                             enable_spell=auto)

if test "x$enable_spell" != "xno"; then
   PKG_CHECK_MODULES(ENCHANT,
   [
      enchant >= $ENCHANT_REQUIRED,
      iso-codes >= $ISO_CODES_REQUIRED
   ], have_enchant="yes", have_enchant="no")

   if test "x$have_enchant" = "xyes"; then
      AC_MSG_CHECKING([whether iso-codes has iso-639 and iso-3166 domains])
      if $PKG_CONFIG --variable=domains iso-codes | grep 639 > /dev/null && \
         $PKG_CONFIG --variable=domains iso-codes | grep 3166 > /dev/null ; then
            AC_DEFINE_UNQUOTED(ISO_CODES_PREFIX, ["`$PKG_CONFIG --variable=prefix iso-codes`"], [ISO codes prefix])
            AC_DEFINE(HAVE_ENCHANT, [], [Define if you have libenchant])
            result=yes
      else
            result=no
            have_enchant="no"
      fi
      AC_MSG_RESULT([$result])
   fi
else
   have_enchant=no
fi

if test "x$enable_spell" = "xyes" -a "x$have_enchant" != "xyes"; then
   AC_MSG_ERROR([Couldn't find spell dependencies.])
fi

AM_CONDITIONAL(HAVE_ENCHANT, test "x$have_enchant" = "xyes")

dnl -----------------------------------------------------------
dnl Language Support
dnl -----------------------------------------------------------
GETTEXT_PACKAGE=get2gnow
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE",[Gettext package name])

AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
data/Makefile
data/get2gnow.desktop
help/Makefile
src/Makefile
po/Makefile
])

echo
echo "Prefix:        $prefix"
echo "Spell:         $have_enchant"
echo "GNOME Keyring: $have_gnome_keyring"
echo
